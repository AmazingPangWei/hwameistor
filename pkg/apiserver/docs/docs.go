// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/cluster/drbd": {
            "get": {
                "description": "get DRBDSettingGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Setting"
                ],
                "summary": "摘要 获取高可用设置",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.DrbdEnableSetting"
                        }
                    }
                }
            },
            "post": {
                "description": "post EnableDRBDSetting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Setting"
                ],
                "summary": "摘要 高可用设置",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.DrbdEnableSettingReqBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.DrbdEnableSettingRspBody"
                        }
                    },
                    "500": {
                        "description": "失败",
                        "schema": {
                            "$ref": "#/definitions/api.RspFailBody"
                        }
                    }
                }
            }
        },
        "/cluster/nodes": {
            "get": {
                "description": "list StorageNode  驱动状态 [运行中（Ready）,维护中（Maintain）, 离线（Offline)] , 节点状态 [运行中（Ready）,未就绪（NotReady）,未知（Unknown)]",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Node"
                ],
                "summary": "摘要 获取存储节点列表",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "pageSize",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "nodeState",
                        "name": "nodeState",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "driverState",
                        "name": "driverState",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "fuzzy",
                        "name": "fuzzy",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "sort",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.StorageNodeList"
                        }
                    }
                }
            }
        },
        "/cluster/nodes/{nodeName}": {
            "get": {
                "description": "get StorageNode 驱动状态 [运行中（Ready）,维护中（Maintain）, 离线（Offline)] , 节点状态 [运行中（Ready）,未就绪（NotReady）,未知（Unknown)]",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Node"
                ],
                "summary": "摘要 获取指定存储节点",
                "parameters": [
                    {
                        "type": "string",
                        "description": "nodeName",
                        "name": "nodeName",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.StorageNode"
                        }
                    }
                }
            }
        },
        "/cluster/nodes/{nodeName}/disks": {
            "get": {
                "description": "list StorageNodeDisks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Node"
                ],
                "summary": "摘要 获取指定存储节点磁盘列表",
                "parameters": [
                    {
                        "type": "string",
                        "description": "nodeName",
                        "name": "nodeName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "pageSize",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "state",
                        "name": "state",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "fuzzy",
                        "name": "fuzzy",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "sort",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.LocalDiskListByNode"
                        }
                    }
                }
            }
        },
        "/cluster/nodes/{nodeName}/disks/{diskName}": {
            "get": {
                "description": "get GetStorageNodeDisk diskname i.g sdb sdc ...",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Node"
                ],
                "summary": "摘要 获取指定磁盘信息",
                "parameters": [
                    {
                        "type": "string",
                        "description": "nodeName",
                        "name": "nodeName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "diskName",
                        "name": "diskName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "fuzzy",
                        "name": "fuzzy",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "sort",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/api.LocalDiskInfo"
                        }
                    },
                    "500": {
                        "description": "失败",
                        "schema": {
                            "$ref": "#/definitions/api.RspFailBody"
                        }
                    }
                }
            },
            "post": {
                "description": "post UpdateStorageNodeDisk diskname i.g sdb sdc ...",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Node"
                ],
                "summary": "摘要 更新磁盘",
                "parameters": [
                    {
                        "type": "string",
                        "description": "nodeName",
                        "name": "nodeName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "diskName",
                        "name": "diskName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "reqBody",
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/api.DiskReqBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/api.DiskReqBody"
                        }
                    },
                    "500": {
                        "description": "失败",
                        "schema": {
                            "$ref": "#/definitions/api.RspFailBody"
                        }
                    }
                }
            }
        },
        "/cluster/nodes/{nodeName}/migrates": {
            "get": {
                "description": "get StorageNodeMigrate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Node"
                ],
                "summary": "摘要 获取指定节点数据卷迁移任务列表",
                "parameters": [
                    {
                        "type": "string",
                        "description": "nodeName",
                        "name": "nodeName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "pageSize",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.VolumeOperationListByNode"
                        }
                    }
                }
            }
        },
        "/cluster/nodes/{nodeName}/pools": {
            "get": {
                "description": "get StorageNodePoolsList",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Node"
                ],
                "summary": "摘要 获取指定节点存储池列表信息",
                "parameters": [
                    {
                        "type": "string",
                        "description": "nodeName",
                        "name": "nodeName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "fuzzy",
                        "name": "fuzzy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/api.StoragePoolList"
                        }
                    },
                    "500": {
                        "description": "失败",
                        "schema": {
                            "$ref": "#/definitions/api.RspFailBody"
                        }
                    }
                }
            }
        },
        "/cluster/nodes/{nodeName}/pools/{poolName}": {
            "get": {
                "description": "get StorageNodePoolGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Node"
                ],
                "summary": "摘要 获取指定节点指定存储池信息",
                "parameters": [
                    {
                        "type": "string",
                        "description": "nodeName",
                        "name": "nodeName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "poolName",
                        "name": "poolName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/api.StoragePool"
                        }
                    },
                    "500": {
                        "description": "失败",
                        "schema": {
                            "$ref": "#/definitions/api.RspFailBody"
                        }
                    }
                }
            }
        },
        "/cluster/nodes/{nodeName}/pools/{poolName}/disks": {
            "get": {
                "description": "get StorageNodePoolDisksList",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Node"
                ],
                "summary": "摘要 获取指定节点指定存储池磁盘列表信息",
                "parameters": [
                    {
                        "type": "string",
                        "description": "nodeName",
                        "name": "nodeName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "poolName",
                        "name": "poolName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "fuzzy",
                        "name": "fuzzy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/api.LocalDisksItemsList"
                        }
                    },
                    "500": {
                        "description": "失败",
                        "schema": {
                            "$ref": "#/definitions/api.RspFailBody"
                        }
                    }
                }
            }
        },
        "/cluster/nodes/{nodeName}/pools/{poolName}/disks/{diskName}": {
            "get": {
                "description": "get StorageNodePoolDiskGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Node"
                ],
                "summary": "摘要 获取指定节点指定存储池指定磁盘信息",
                "parameters": [
                    {
                        "type": "string",
                        "description": "nodeName",
                        "name": "nodeName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "poolName",
                        "name": "poolName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "diskName",
                        "name": "diskName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/api.LocalDiskInfo"
                        }
                    },
                    "500": {
                        "description": "失败",
                        "schema": {
                            "$ref": "#/definitions/api.RspFailBody"
                        }
                    }
                }
            }
        },
        "/cluster/pools": {
            "get": {
                "description": "list StoragePools",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pool"
                ],
                "summary": "摘要 获取存储池列表信息",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "pageSize",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "fuzzy",
                        "name": "fuzzy",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "sort",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.StoragePoolList"
                        }
                    }
                }
            }
        },
        "/cluster/pools/{poolName}": {
            "get": {
                "description": "get Pool angel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pool"
                ],
                "summary": "摘要 获取指定存储池基本信息",
                "parameters": [
                    {
                        "type": "string",
                        "description": "poolName",
                        "name": "poolName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.StoragePool"
                        }
                    }
                }
            }
        },
        "/cluster/pools/{poolName}/nodes": {
            "get": {
                "description": "get StorageNodesGetByPoolName",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pool"
                ],
                "summary": "摘要 获取指定存储池存储节点列表信息",
                "parameters": [
                    {
                        "type": "string",
                        "description": "poolName",
                        "name": "poolName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "pageSize",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "nodeName",
                        "name": "nodeName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "state",
                        "name": "state",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "fuzzy",
                        "name": "fuzzy",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "sort",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.StorageNodeListByPool"
                        }
                    }
                }
            }
        },
        "/cluster/pools/{poolName}/nodes/{nodeName}/disks": {
            "get": {
                "description": "get StorageNodeDisksGetByPoolName",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pool"
                ],
                "summary": "摘要 获取指定存储池指定存储节点磁盘列表信息",
                "parameters": [
                    {
                        "type": "string",
                        "description": "nodeName",
                        "name": "nodeName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "poolName",
                        "name": "poolName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "pageSize",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "fuzzy",
                        "name": "fuzzy",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.NodeDiskListByPool"
                        }
                    }
                }
            }
        },
        "/cluster/status": {
            "get": {
                "description": "get ModuleStatus",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Metric"
                ],
                "summary": "摘要 获取基础监控指标",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/api.ModuleStatus"
                        }
                    }
                }
            }
        },
        "/cluster/volumegroups": {
            "get": {
                "description": "get VolumeGroupList",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VolumeGroup"
                ],
                "summary": "摘要 获取数据卷组列表",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path"
                    },
                    {
                        "type": "boolean",
                        "description": "fuzzy",
                        "name": "fuzzy",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "sort",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.VolumeGroupList"
                        }
                    }
                }
            }
        },
        "/cluster/volumegroups/{vgName}": {
            "get": {
                "description": "get VolumeGroupGet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VolumeGroup"
                ],
                "summary": "摘要 查看数据卷组",
                "parameters": [
                    {
                        "type": "string",
                        "description": "vgName",
                        "name": "vgName",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.VolumeGroup"
                        }
                    }
                }
            }
        },
        "/cluster/volumes": {
            "get": {
                "description": "list Volume",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Volume"
                ],
                "summary": "摘要 获取数据卷列表信息",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "pageSize",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "volumeName",
                        "name": "volumeName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "state",
                        "name": "state",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "fuzzy",
                        "name": "fuzzy",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "sort",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/api.VolumeList"
                        }
                    }
                }
            }
        },
        "/cluster/volumes/{volumeName}": {
            "get": {
                "description": "get Volume angel1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Volume"
                ],
                "summary": "摘要 获取指定数据卷基本信息",
                "parameters": [
                    {
                        "type": "string",
                        "description": "volumeName",
                        "name": "volumeName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Volume"
                        }
                    }
                }
            }
        },
        "/cluster/volumes/{volumeName}/convert": {
            "get": {
                "description": "get GetVolumeConvertOperation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Volume"
                ],
                "summary": "摘要 获取指定数据卷转换操作",
                "parameters": [
                    {
                        "type": "string",
                        "description": "volumeName",
                        "name": "volumeName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/api.VolumeConvertOperation"
                        }
                    },
                    "500": {
                        "description": "失败",
                        "schema": {
                            "$ref": "#/definitions/api.RspFailBody"
                        }
                    }
                }
            },
            "post": {
                "description": "post VolumeConvertOperation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Volume"
                ],
                "summary": "摘要 指定数据卷转换操作",
                "parameters": [
                    {
                        "type": "string",
                        "description": "volumeName",
                        "name": "volumeName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/api.VolumeConvertRspBody"
                        }
                    },
                    "500": {
                        "description": "失败",
                        "schema": {
                            "$ref": "#/definitions/api.RspFailBody"
                        }
                    }
                }
            }
        },
        "/cluster/volumes/{volumeName}/expand": {
            "get": {
                "description": "get GetVolumeExpandOperation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Volume"
                ],
                "summary": "摘要 获取指定数据卷扩容操作",
                "parameters": [
                    {
                        "type": "string",
                        "description": "volumeName",
                        "name": "volumeName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/api.VolumeExpandOperation"
                        }
                    },
                    "500": {
                        "description": "失败",
                        "schema": {
                            "$ref": "#/definitions/api.RspFailBody"
                        }
                    }
                }
            },
            "post": {
                "description": "post VolumeExpandOperation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Volume"
                ],
                "summary": "摘要 指定数据卷转换",
                "parameters": [
                    {
                        "type": "string",
                        "description": "volumeName",
                        "name": "volumeName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/api.VolumeConvertOperation"
                        }
                    },
                    "500": {
                        "description": "失败",
                        "schema": {
                            "$ref": "#/definitions/api.RspFailBody"
                        }
                    }
                }
            }
        },
        "/cluster/volumes/{volumeName}/migrate": {
            "get": {
                "description": "get GetVolumeMigrateOperation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Volume"
                ],
                "summary": "摘要 获取指定数据卷迁移操作",
                "parameters": [
                    {
                        "type": "string",
                        "description": "volumeName",
                        "name": "volumeName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/api.VolumeMigrateOperation"
                        }
                    },
                    "500": {
                        "description": "失败",
                        "schema": {
                            "$ref": "#/definitions/api.RspFailBody"
                        }
                    }
                }
            },
            "post": {
                "description": "post VolumeMigrateOperation body i.g. body { SrcNode string ,SelectedNode string}",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Volume"
                ],
                "summary": "摘要 指定数据卷迁移操作",
                "parameters": [
                    {
                        "type": "string",
                        "description": "volumeName",
                        "name": "volumeName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "reqBody",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.VolumeMigrateReqBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/api.VolumeMigrateRspBody"
                        }
                    },
                    "500": {
                        "description": "失败",
                        "schema": {
                            "$ref": "#/definitions/api.RspFailBody"
                        }
                    }
                }
            }
        },
        "/cluster/volumes/{volumeName}/replicas": {
            "get": {
                "description": "list volumes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Volume"
                ],
                "summary": "摘要 获取指定数据卷的副本列表信息",
                "parameters": [
                    {
                        "type": "string",
                        "description": "volumeName",
                        "name": "volumeName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "volumeReplicaName",
                        "name": "volumeReplicaName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "state",
                        "name": "state",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/api.VolumeReplicaList"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.DiskReqBody": {
            "type": "object",
            "properties": {
                "reserve": {
                    "type": "boolean"
                }
            }
        },
        "api.DrbdEnableSetting": {
            "type": "object",
            "properties": {
                "enable": {
                    "type": "boolean"
                },
                "state": {
                    "description": "组件状态 运行中 未就绪",
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "api.DrbdEnableSettingReqBody": {
            "type": "object",
            "properties": {
                "enable": {
                    "type": "boolean"
                }
            }
        },
        "api.DrbdEnableSettingRspBody": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api.DrbdEnableSetting"
                }
            }
        },
        "api.LocalDiskInfo": {
            "type": "object",
            "properties": {
                "annotations": {
                    "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n+optional",
                    "type": "string"
                },
                "availableCapacityBytes": {
                    "description": "AvailableCapacityBytes 可用容量",
                    "type": "integer"
                },
                "clusterName": {
                    "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\n+optional",
                    "type": "string"
                },
                "creationTimestamp": {
                    "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "deletionGracePeriodSeconds": {
                    "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
                    "type": "integer"
                },
                "deletionTimestamp": {
                    "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "finalizers": {
                    "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generateName": {
                    "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional",
                    "type": "string"
                },
                "generation": {
                    "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
                    "type": "integer"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional",
                    "type": "string"
                },
                "labels": {
                    "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "localStoragePooLName": {
                    "description": "LocalStoragePooLName 存储池名称",
                    "type": "string"
                },
                "managedFields": {
                    "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.\n\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.ManagedFieldsEntry"
                    }
                },
                "name": {
                    "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
                    "type": "string"
                },
                "ownerReferences": {
                    "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.OwnerReference"
                    }
                },
                "resourceVersion": {
                    "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional",
                    "type": "string"
                },
                "selfLink": {
                    "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n\nDEPRECATED\nKubernetes will stop propagating this field in 1.20 release and the field is planned\nto be removed in 1.21 release.\n+optional",
                    "type": "string"
                },
                "spec": {
                    "$ref": "#/definitions/v1alpha1.LocalDiskSpec"
                },
                "status": {
                    "$ref": "#/definitions/v1alpha1.LocalDiskStatus"
                },
                "totalCapacityBytes": {
                    "description": "TotalCapacityBytes 总容量",
                    "type": "integer"
                },
                "uid": {
                    "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional",
                    "type": "string"
                }
            }
        },
        "api.LocalDiskListByNode": {
            "type": "object",
            "properties": {
                "items": {
                    "description": "localDisks 节点磁盘列表",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.LocalDiskInfo"
                    }
                },
                "nodeName": {
                    "description": "nodeName 节点名称",
                    "type": "string"
                },
                "pagination": {
                    "description": "page 信息",
                    "$ref": "#/definitions/api.Pagination"
                }
            }
        },
        "api.LocalDisksItemsList": {
            "type": "object",
            "properties": {
                "items": {
                    "description": "localDisks 节点磁盘列表",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.LocalDiskInfo"
                    }
                }
            }
        },
        "api.ModuleState": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "组件名称",
                    "type": "string"
                },
                "state": {
                    "description": "组件状态 运行中 未就绪",
                    "type": "string"
                }
            }
        },
        "api.ModuleStatus": {
            "type": "object",
            "properties": {
                "admissionController": {
                    "$ref": "#/definitions/v1alpha1.AdmissionControllerStatus"
                },
                "apiServer": {
                    "$ref": "#/definitions/v1alpha1.ApiServerStatus"
                },
                "evictor": {
                    "$ref": "#/definitions/v1alpha1.EvictorStatus"
                },
                "localDiskManager": {
                    "$ref": "#/definitions/v1alpha1.LocalDiskManagerStatus"
                },
                "localStorage": {
                    "$ref": "#/definitions/v1alpha1.LocalStorageStatus"
                },
                "modulesStatus": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.ModuleState"
                    }
                },
                "phase": {
                    "type": "string"
                },
                "scheduler": {
                    "$ref": "#/definitions/v1alpha1.SchedulerStatus"
                }
            }
        },
        "api.NodeDiskListByPool": {
            "type": "object",
            "properties": {
                "localDisks": {
                    "description": "localDisks 节点磁盘列表",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.LocalDiskInfo"
                    }
                },
                "nodeName": {
                    "description": "nodeName 节点名称",
                    "type": "string"
                },
                "page": {
                    "description": "page 信息",
                    "$ref": "#/definitions/api.Pagination"
                },
                "poolName": {
                    "description": "PoolName 存储池名称",
                    "type": "string"
                }
            }
        },
        "api.Pagination": {
            "type": "object",
            "properties": {
                "page": {
                    "description": "当前页索引，从 1 开始，为 0 时，会自动重置为默认值 constants.DefaultPage",
                    "type": "integer"
                },
                "pageSize": {
                    "description": "每页数据量，为 -1 时表示查询全部，为 0 时会重置为默认值\nconstants.DefaultPageSize",
                    "type": "integer"
                },
                "pages": {
                    "description": "总页数",
                    "type": "integer"
                },
                "total": {
                    "description": "总共有多少条目，请求时可以不用传递",
                    "type": "integer"
                }
            }
        },
        "api.RspFailBody": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "errcode": {
                    "type": "integer"
                }
            }
        },
        "api.StorageNode": {
            "type": "object",
            "properties": {
                "k8SNodeState": {
                    "description": "组件状态 运行中 未就绪",
                    "type": "string"
                },
                "localDiskNode": {
                    "$ref": "#/definitions/v1alpha1.LocalDiskNode"
                },
                "localStorageNode": {
                    "$ref": "#/definitions/v1alpha1.LocalStorageNode"
                }
            }
        },
        "api.StorageNodeList": {
            "type": "object",
            "properties": {
                "items": {
                    "description": "StorageNodes",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.StorageNode"
                    }
                },
                "pagination": {
                    "description": "page 信息",
                    "$ref": "#/definitions/api.Pagination"
                }
            }
        },
        "api.StorageNodeListByPool": {
            "type": "object",
            "properties": {
                "page": {
                    "description": "page 信息",
                    "$ref": "#/definitions/api.Pagination"
                },
                "storageNodes": {
                    "description": "StorageNodes",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.StorageNode"
                    }
                },
                "storagePoolName": {
                    "description": "StoragePoolName 存储池名称",
                    "type": "string"
                }
            }
        },
        "api.StoragePool": {
            "type": "object",
            "properties": {
                "allocatedCapacityBytes": {
                    "description": "AllocatedCapacityBytes 存储池已经分配存储容量",
                    "type": "integer"
                },
                "class": {
                    "description": "Supported class: HDD, SSD, NVMe\n+kubebuilder:validation:Enum:=HDD;SSD;NVMe",
                    "type": "string"
                },
                "createTime": {
                    "description": "createTime 创建时间",
                    "type": "string"
                },
                "disks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1alpha1.LocalDevice"
                    }
                },
                "freeCapacityBytes": {
                    "type": "integer"
                },
                "freeVolumeCount": {
                    "type": "integer"
                },
                "name": {
                    "description": "Supported pool name: HDD_POOL, SSD_POOL, NVMe_POOL",
                    "type": "string"
                },
                "nodeNames": {
                    "description": "NodesNames Pool所在节点列表",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "path": {
                    "description": "VG path",
                    "type": "string"
                },
                "totalCapacityBytes": {
                    "type": "integer"
                },
                "totalVolumeCount": {
                    "type": "integer"
                },
                "type": {
                    "description": "Supported type: REGULAR\n+kubebuilder:validation:Enum:=REGULAR\n+kubebuilder:default:=REGULAR",
                    "type": "string"
                },
                "usedCapacityBytes": {
                    "type": "integer"
                },
                "usedVolumeCount": {
                    "type": "integer"
                },
                "volumeCapacityBytesLimit": {
                    "type": "integer"
                },
                "volumes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "api.StoragePoolList": {
            "type": "object",
            "properties": {
                "page": {
                    "description": "page 信息",
                    "$ref": "#/definitions/api.Pagination"
                },
                "storagePools": {
                    "description": "storagePools",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.StoragePool"
                    }
                }
            }
        },
        "api.Volume": {
            "type": "object",
            "properties": {
                "annotations": {
                    "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n+optional",
                    "type": "string"
                },
                "clusterName": {
                    "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\n+optional",
                    "type": "string"
                },
                "creationTimestamp": {
                    "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "deletionGracePeriodSeconds": {
                    "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
                    "type": "integer"
                },
                "deletionTimestamp": {
                    "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "finalizers": {
                    "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generateName": {
                    "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional",
                    "type": "string"
                },
                "generation": {
                    "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
                    "type": "integer"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional",
                    "type": "string"
                },
                "labels": {
                    "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "managedFields": {
                    "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.\n\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.ManagedFieldsEntry"
                    }
                },
                "name": {
                    "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
                    "type": "string"
                },
                "ownerReferences": {
                    "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.OwnerReference"
                    }
                },
                "resourceVersion": {
                    "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional",
                    "type": "string"
                },
                "selfLink": {
                    "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n\nDEPRECATED\nKubernetes will stop propagating this field in 1.20 release and the field is planned\nto be removed in 1.21 release.\n+optional",
                    "type": "string"
                },
                "spec": {
                    "$ref": "#/definitions/v1alpha1.LocalVolumeSpec"
                },
                "status": {
                    "$ref": "#/definitions/v1alpha1.LocalVolumeStatus"
                },
                "uid": {
                    "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional",
                    "type": "string"
                }
            }
        },
        "api.VolumeConvertInfo": {
            "type": "object",
            "properties": {
                "replicaNum": {
                    "type": "integer"
                },
                "volumeName": {
                    "type": "string"
                }
            }
        },
        "api.VolumeConvertOperation": {
            "type": "object",
            "properties": {
                "annotations": {
                    "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n+optional",
                    "type": "string"
                },
                "clusterName": {
                    "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\n+optional",
                    "type": "string"
                },
                "creationTimestamp": {
                    "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "deletionGracePeriodSeconds": {
                    "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
                    "type": "integer"
                },
                "deletionTimestamp": {
                    "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "finalizers": {
                    "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generateName": {
                    "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional",
                    "type": "string"
                },
                "generation": {
                    "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
                    "type": "integer"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional",
                    "type": "string"
                },
                "labels": {
                    "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "managedFields": {
                    "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.\n\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.ManagedFieldsEntry"
                    }
                },
                "name": {
                    "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
                    "type": "string"
                },
                "ownerReferences": {
                    "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.OwnerReference"
                    }
                },
                "resourceVersion": {
                    "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional",
                    "type": "string"
                },
                "selfLink": {
                    "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n\nDEPRECATED\nKubernetes will stop propagating this field in 1.20 release and the field is planned\nto be removed in 1.21 release.\n+optional",
                    "type": "string"
                },
                "spec": {
                    "$ref": "#/definitions/v1alpha1.LocalVolumeConvertSpec"
                },
                "status": {
                    "$ref": "#/definitions/v1alpha1.LocalVolumeConvertStatus"
                },
                "uid": {
                    "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional",
                    "type": "string"
                }
            }
        },
        "api.VolumeConvertRspBody": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api.VolumeConvertInfo"
                }
            }
        },
        "api.VolumeExpandOperation": {
            "type": "object",
            "properties": {
                "annotations": {
                    "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n+optional",
                    "type": "string"
                },
                "clusterName": {
                    "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\n+optional",
                    "type": "string"
                },
                "creationTimestamp": {
                    "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "deletionGracePeriodSeconds": {
                    "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
                    "type": "integer"
                },
                "deletionTimestamp": {
                    "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "finalizers": {
                    "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generateName": {
                    "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional",
                    "type": "string"
                },
                "generation": {
                    "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
                    "type": "integer"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional",
                    "type": "string"
                },
                "labels": {
                    "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "managedFields": {
                    "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.\n\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.ManagedFieldsEntry"
                    }
                },
                "name": {
                    "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
                    "type": "string"
                },
                "ownerReferences": {
                    "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.OwnerReference"
                    }
                },
                "resourceVersion": {
                    "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional",
                    "type": "string"
                },
                "selfLink": {
                    "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n\nDEPRECATED\nKubernetes will stop propagating this field in 1.20 release and the field is planned\nto be removed in 1.21 release.\n+optional",
                    "type": "string"
                },
                "spec": {
                    "$ref": "#/definitions/v1alpha1.LocalVolumeExpandSpec"
                },
                "status": {
                    "$ref": "#/definitions/v1alpha1.LocalVolumeExpandStatus"
                },
                "uid": {
                    "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional",
                    "type": "string"
                }
            }
        },
        "api.VolumeGroup": {
            "type": "object",
            "properties": {
                "annotations": {
                    "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n+optional",
                    "type": "string"
                },
                "clusterName": {
                    "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\n+optional",
                    "type": "string"
                },
                "creationTimestamp": {
                    "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "deletionGracePeriodSeconds": {
                    "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
                    "type": "integer"
                },
                "deletionTimestamp": {
                    "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "finalizers": {
                    "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generateName": {
                    "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional",
                    "type": "string"
                },
                "generation": {
                    "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
                    "type": "integer"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional",
                    "type": "string"
                },
                "labels": {
                    "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "managedFields": {
                    "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.\n\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.ManagedFieldsEntry"
                    }
                },
                "name": {
                    "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
                    "type": "string"
                },
                "ownerReferences": {
                    "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.OwnerReference"
                    }
                },
                "resourceVersion": {
                    "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional",
                    "type": "string"
                },
                "selfLink": {
                    "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n\nDEPRECATED\nKubernetes will stop propagating this field in 1.20 release and the field is planned\nto be removed in 1.21 release.\n+optional",
                    "type": "string"
                },
                "spec": {
                    "$ref": "#/definitions/v1alpha1.LocalVolumeGroupSpec"
                },
                "status": {
                    "$ref": "#/definitions/v1alpha1.LocalVolumeGroupStatus"
                },
                "uid": {
                    "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional",
                    "type": "string"
                },
                "volumes": {
                    "description": "Volumes",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1alpha1.LocalVolume"
                    }
                }
            }
        },
        "api.VolumeGroupList": {
            "type": "object",
            "properties": {
                "items": {
                    "description": "VolumeGroups",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.VolumeGroup"
                    }
                }
            }
        },
        "api.VolumeList": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Volume"
                    }
                },
                "pagination": {
                    "description": "page 信息",
                    "$ref": "#/definitions/api.Pagination"
                }
            }
        },
        "api.VolumeMigrateInfo": {
            "type": "object",
            "properties": {
                "selectedNode": {
                    "type": "string"
                },
                "srcNode": {
                    "type": "string"
                },
                "volumeName": {
                    "type": "string"
                }
            }
        },
        "api.VolumeMigrateOperation": {
            "type": "object",
            "properties": {
                "annotations": {
                    "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n+optional",
                    "type": "string"
                },
                "clusterName": {
                    "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\n+optional",
                    "type": "string"
                },
                "creationTimestamp": {
                    "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "deletionGracePeriodSeconds": {
                    "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
                    "type": "integer"
                },
                "deletionTimestamp": {
                    "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "finalizers": {
                    "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generateName": {
                    "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional",
                    "type": "string"
                },
                "generation": {
                    "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
                    "type": "integer"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional",
                    "type": "string"
                },
                "labels": {
                    "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "managedFields": {
                    "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.\n\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.ManagedFieldsEntry"
                    }
                },
                "name": {
                    "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
                    "type": "string"
                },
                "ownerReferences": {
                    "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.OwnerReference"
                    }
                },
                "resourceVersion": {
                    "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional",
                    "type": "string"
                },
                "selfLink": {
                    "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n\nDEPRECATED\nKubernetes will stop propagating this field in 1.20 release and the field is planned\nto be removed in 1.21 release.\n+optional",
                    "type": "string"
                },
                "spec": {
                    "$ref": "#/definitions/v1alpha1.LocalVolumeMigrateSpec"
                },
                "status": {
                    "$ref": "#/definitions/v1alpha1.LocalVolumeMigrateStatus"
                },
                "uid": {
                    "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional",
                    "type": "string"
                }
            }
        },
        "api.VolumeMigrateReqBody": {
            "type": "object",
            "properties": {
                "abort": {
                    "type": "boolean"
                },
                "selectedNode": {
                    "type": "string"
                },
                "srcNode": {
                    "type": "string"
                }
            }
        },
        "api.VolumeMigrateRspBody": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api.VolumeMigrateInfo"
                }
            }
        },
        "api.VolumeOperationListByNode": {
            "type": "object",
            "properties": {
                "items": {
                    "description": "VolumeOperations",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.VolumeMigrateOperation"
                    }
                },
                "nodeName": {
                    "description": "node name",
                    "type": "string"
                },
                "pagination": {
                    "description": "page 信息",
                    "$ref": "#/definitions/api.Pagination"
                }
            }
        },
        "api.VolumeReplica": {
            "type": "object",
            "properties": {
                "annotations": {
                    "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n+optional",
                    "type": "string"
                },
                "clusterName": {
                    "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\n+optional",
                    "type": "string"
                },
                "creationTimestamp": {
                    "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "deletionGracePeriodSeconds": {
                    "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
                    "type": "integer"
                },
                "deletionTimestamp": {
                    "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "finalizers": {
                    "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generateName": {
                    "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional",
                    "type": "string"
                },
                "generation": {
                    "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
                    "type": "integer"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional",
                    "type": "string"
                },
                "labels": {
                    "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "managedFields": {
                    "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.\n\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.ManagedFieldsEntry"
                    }
                },
                "name": {
                    "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
                    "type": "string"
                },
                "ownerReferences": {
                    "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.OwnerReference"
                    }
                },
                "resourceVersion": {
                    "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional",
                    "type": "string"
                },
                "selfLink": {
                    "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n\nDEPRECATED\nKubernetes will stop propagating this field in 1.20 release and the field is planned\nto be removed in 1.21 release.\n+optional",
                    "type": "string"
                },
                "spec": {
                    "$ref": "#/definitions/v1alpha1.LocalVolumeReplicaSpec"
                },
                "state": {
                    "description": "replica state",
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/v1alpha1.LocalVolumeReplicaStatus"
                },
                "uid": {
                    "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional",
                    "type": "string"
                }
            }
        },
        "api.VolumeReplicaList": {
            "type": "object",
            "properties": {
                "volumeName": {
                    "description": "volume name",
                    "type": "string"
                },
                "volumeReplicas": {
                    "description": "VolumeReplicas",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.VolumeReplica"
                    }
                }
            }
        },
        "v1.FieldsV1": {
            "type": "object"
        },
        "v1.ManagedFieldsEntry": {
            "type": "object",
            "properties": {
                "apiVersion": {
                    "description": "APIVersion defines the version of this resource that this field set\napplies to. The format is \"group/version\" just like the top-level\nAPIVersion field. It is necessary to track the version of a field\nset because it cannot be automatically converted.",
                    "type": "string"
                },
                "fieldsType": {
                    "description": "FieldsType is the discriminator for the different fields format and version.\nThere is currently only one possible value: \"FieldsV1\"",
                    "type": "string"
                },
                "fieldsV1": {
                    "description": "FieldsV1 holds the first JSON version format as described in the \"FieldsV1\" type.\n+optional",
                    "$ref": "#/definitions/v1.FieldsV1"
                },
                "manager": {
                    "description": "Manager is an identifier of the workflow managing these fields.",
                    "type": "string"
                },
                "operation": {
                    "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created.\nThe only valid values for this field are 'Apply' and 'Update'.",
                    "type": "string"
                },
                "time": {
                    "description": "Time is timestamp of when these fields were set. It should always be empty if Operation is 'Apply'\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.ObjectReference": {
            "type": "object",
            "properties": {
                "apiVersion": {
                    "description": "API version of the referent.\n+optional",
                    "type": "string"
                },
                "fieldPath": {
                    "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.\nTODO: this design is not final and this field is subject to change in the future.\n+optional",
                    "type": "string"
                },
                "kind": {
                    "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\n+optional",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\n+optional",
                    "type": "string"
                },
                "resourceVersion": {
                    "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional",
                    "type": "string"
                },
                "uid": {
                    "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.OwnerReference": {
            "type": "object",
            "properties": {
                "apiVersion": {
                    "description": "API version of the referent.",
                    "type": "string"
                },
                "blockOwnerDeletion": {
                    "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then\nthe owner cannot be deleted from the key-value store until this\nreference is removed.\nDefaults to false.\nTo set this field, a user needs \"delete\" permission of the owner,\notherwise 422 (Unprocessable Entity) will be returned.\n+optional",
                    "type": "boolean"
                },
                "controller": {
                    "description": "If true, this reference points to the managing controller.\n+optional",
                    "type": "boolean"
                },
                "kind": {
                    "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names",
                    "type": "string"
                },
                "uid": {
                    "description": "UID of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                    "type": "string"
                }
            }
        },
        "v1alpha1.AccessibilityTopology": {
            "type": "object",
            "properties": {
                "nodes": {
                    "description": "Nodes is the collection of storage nodes the volume replicas must locate at",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "regions": {
                    "description": "regions where the volume replicas should be distributed across, it's Optional\n+kubebuilder:default:={default}",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "zones": {
                    "description": "zones where the volume replicas should be distributed across, it's Optional\n+kubebuilder:default:={default}",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "v1alpha1.AdmissionControllerStatus": {
            "type": "object",
            "properties": {
                "instances": {
                    "$ref": "#/definitions/v1alpha1.DeployStatus"
                }
            }
        },
        "v1alpha1.ApiServerStatus": {
            "type": "object",
            "properties": {
                "instances": {
                    "$ref": "#/definitions/v1alpha1.DeployStatus"
                }
            }
        },
        "v1alpha1.DeployStatus": {
            "type": "object",
            "properties": {
                "availablePodCount": {
                    "type": "integer"
                },
                "currentPodCount": {
                    "type": "integer"
                },
                "desiredPodCount": {
                    "type": "integer"
                },
                "pods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1alpha1.PodStatus"
                    }
                },
                "readyPodCount": {
                    "type": "integer"
                },
                "upToDatePodCount": {
                    "type": "integer"
                }
            }
        },
        "v1alpha1.Disk": {
            "type": "object",
            "properties": {
                "capacity": {
                    "description": "Capacity",
                    "type": "integer"
                },
                "devPath": {
                    "description": "DevPath",
                    "type": "string"
                },
                "diskType": {
                    "description": "DiskType SSD/HDD/NVME...",
                    "type": "string"
                },
                "status": {
                    "description": "Status",
                    "type": "string"
                }
            }
        },
        "v1alpha1.DiskAttributes": {
            "type": "object",
            "properties": {
                "devType": {
                    "description": "DeviceType represents the type of device like\nsparse, disk, partition, lvm, crypt",
                    "type": "string"
                },
                "formFactor": {
                    "description": "FormFactor is the disk size, like 2.5 inches",
                    "type": "string"
                },
                "modelName": {
                    "description": "ModelName is the name of disk model",
                    "type": "string"
                },
                "pciVendorID": {
                    "description": "PCIVendorID is the ID of the PCI vendor, for NVMe disk only",
                    "type": "string"
                },
                "product": {
                    "description": "Product is a class of disks the vendor produces",
                    "type": "string"
                },
                "protocol": {
                    "description": "Protocol is for data transport, such as ATA, SCSI, NVMe",
                    "type": "string"
                },
                "rotationRate": {
                    "description": "RotationRate is the rate of the disk rotation",
                    "type": "integer"
                },
                "serialNumber": {
                    "description": "SerialNumber is a unique number assigned to a disk",
                    "type": "string"
                },
                "type": {
                    "description": "Type is the disk type, such as ata, scsi, nvme, megaraid,N, ...",
                    "type": "string"
                },
                "vendor": {
                    "description": "Vendor is who provides the disk",
                    "type": "string"
                }
            }
        },
        "v1alpha1.EvictorStatus": {
            "type": "object",
            "properties": {
                "instances": {
                    "$ref": "#/definitions/v1alpha1.DeployStatus"
                }
            }
        },
        "v1alpha1.FileSystemInfo": {
            "type": "object",
            "properties": {
                "fsType": {
                    "description": "Type represents the FileSystem type of the disk\n+optional",
                    "type": "string"
                },
                "mountPoint": {
                    "description": "MountPoint represents the mountpoint of the disk\n+optional",
                    "type": "string"
                }
            }
        },
        "v1alpha1.HAState": {
            "type": "object",
            "properties": {
                "reason": {
                    "description": "Reason is why this state happened",
                    "type": "string"
                },
                "state": {
                    "description": "Consistent, Inconsistent, replica is ready only when consistent",
                    "type": "string"
                }
            }
        },
        "v1alpha1.LocalDevice": {
            "type": "object",
            "properties": {
                "capacityBytes": {
                    "description": "disk capacity",
                    "type": "integer"
                },
                "devPath": {
                    "description": "e.g. /dev/sdb",
                    "type": "string"
                },
                "state": {
                    "description": "Possible state: Available, Inuse, Offline",
                    "type": "string"
                },
                "type": {
                    "description": "Supported: HDD, SSD, NVMe, RAM",
                    "type": "string"
                }
            }
        },
        "v1alpha1.LocalDiskManagerStatus": {
            "type": "object",
            "properties": {
                "csi": {
                    "$ref": "#/definitions/v1alpha1.DeployStatus"
                },
                "instances": {
                    "$ref": "#/definitions/v1alpha1.DeployStatus"
                }
            }
        },
        "v1alpha1.LocalDiskNode": {
            "type": "object",
            "properties": {
                "annotations": {
                    "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n+optional",
                    "type": "string"
                },
                "clusterName": {
                    "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\n+optional",
                    "type": "string"
                },
                "creationTimestamp": {
                    "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "deletionGracePeriodSeconds": {
                    "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
                    "type": "integer"
                },
                "deletionTimestamp": {
                    "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "finalizers": {
                    "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generateName": {
                    "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional",
                    "type": "string"
                },
                "generation": {
                    "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
                    "type": "integer"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional",
                    "type": "string"
                },
                "labels": {
                    "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "managedFields": {
                    "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.\n\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.ManagedFieldsEntry"
                    }
                },
                "name": {
                    "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
                    "type": "string"
                },
                "ownerReferences": {
                    "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.OwnerReference"
                    }
                },
                "resourceVersion": {
                    "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional",
                    "type": "string"
                },
                "selfLink": {
                    "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n\nDEPRECATED\nKubernetes will stop propagating this field in 1.20 release and the field is planned\nto be removed in 1.21 release.\n+optional",
                    "type": "string"
                },
                "spec": {
                    "$ref": "#/definitions/v1alpha1.LocalDiskNodeSpec"
                },
                "status": {
                    "$ref": "#/definitions/v1alpha1.LocalDiskNodeStatus"
                },
                "uid": {
                    "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional",
                    "type": "string"
                }
            }
        },
        "v1alpha1.LocalDiskNodeSpec": {
            "type": "object",
            "properties": {
                "attachNode": {
                    "description": "AttachNode represent where disk is attached",
                    "type": "string"
                }
            }
        },
        "v1alpha1.LocalDiskNodeStatus": {
            "type": "object",
            "properties": {
                "allocatableDisk": {
                    "description": "AllocatableDisk",
                    "type": "integer"
                },
                "disks": {
                    "description": "Disks key is the name of LocalDisk",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/v1alpha1.Disk"
                    }
                },
                "totalDisk": {
                    "description": "TotalDisk",
                    "type": "integer"
                }
            }
        },
        "v1alpha1.LocalDiskSpec": {
            "type": "object",
            "properties": {
                "capacity": {
                    "description": "Capacity of the disk in bytes",
                    "type": "integer"
                },
                "claimRef": {
                    "description": "ClaimRef is the reference to the LDC which has claimed this LD\n+optional",
                    "$ref": "#/definitions/v1.ObjectReference"
                },
                "devicePath": {
                    "description": "DevicePath is the disk path in the OS",
                    "type": "string"
                },
                "diskAttributes": {
                    "description": "DiskAttributes has hardware/static attributes of the disk",
                    "$ref": "#/definitions/v1alpha1.DiskAttributes"
                },
                "isRaid": {
                    "description": "HasRAID identifies if the disk is a raid disk or not",
                    "type": "boolean"
                },
                "nodeName": {
                    "description": "NodeName represents the node where the disk is attached\n+kubebuilder:validation:Required",
                    "type": "string"
                },
                "partitionInfo": {
                    "description": "PartitionInfo contains partition information\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1alpha1.PartitionInfo"
                    }
                },
                "partitioned": {
                    "description": "HasPartition represents if the disk has partitions or not",
                    "type": "boolean"
                },
                "raidInfo": {
                    "description": "RAIDInfo contains RAID information\n+optional",
                    "$ref": "#/definitions/v1alpha1.RAIDInfo"
                },
                "reserved": {
                    "description": "Reserved represents the disk won't be used in hwameistor later, until it becomes unreserved\n+optional",
                    "type": "boolean"
                },
                "smartInfo": {
                    "description": "SmartInfo contains infos collected by smartctl\n+optional",
                    "$ref": "#/definitions/v1alpha1.SmartInfo"
                },
                "state": {
                    "description": "State is the current state of the disk (Active/Inactive/Unknown)\n+kubebuilder:validation:Enum:=Active;Inactive;Unknown",
                    "type": "string"
                },
                "supportSmart": {
                    "description": "HasSmartInfo identified if the disk supports SMART or not",
                    "type": "boolean"
                },
                "uuid": {
                    "description": "UUID global unique identifier of the disk",
                    "type": "string"
                }
            }
        },
        "v1alpha1.LocalDiskStatus": {
            "type": "object",
            "properties": {
                "claimState": {
                    "description": "State represents the claim state of the disk\n+kubebuilder:validation:Enum:=Bound;Reserved;Available;Pending",
                    "type": "string"
                }
            }
        },
        "v1alpha1.LocalPool": {
            "type": "object",
            "properties": {
                "class": {
                    "description": "Supported class: HDD, SSD, NVMe\n+kubebuilder:validation:Enum:=HDD;SSD;NVMe",
                    "type": "string"
                },
                "disks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1alpha1.LocalDevice"
                    }
                },
                "freeCapacityBytes": {
                    "type": "integer"
                },
                "freeVolumeCount": {
                    "type": "integer"
                },
                "name": {
                    "description": "Supported pool name: HDD_POOL, SSD_POOL, NVMe_POOL",
                    "type": "string"
                },
                "path": {
                    "description": "VG path",
                    "type": "string"
                },
                "totalCapacityBytes": {
                    "type": "integer"
                },
                "totalVolumeCount": {
                    "type": "integer"
                },
                "type": {
                    "description": "Supported type: REGULAR\n+kubebuilder:validation:Enum:=REGULAR\n+kubebuilder:default:=REGULAR",
                    "type": "string"
                },
                "usedCapacityBytes": {
                    "type": "integer"
                },
                "usedVolumeCount": {
                    "type": "integer"
                },
                "volumeCapacityBytesLimit": {
                    "type": "integer"
                },
                "volumes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "v1alpha1.LocalStorageNode": {
            "type": "object",
            "properties": {
                "annotations": {
                    "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n+optional",
                    "type": "string"
                },
                "clusterName": {
                    "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\n+optional",
                    "type": "string"
                },
                "creationTimestamp": {
                    "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "deletionGracePeriodSeconds": {
                    "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
                    "type": "integer"
                },
                "deletionTimestamp": {
                    "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "finalizers": {
                    "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generateName": {
                    "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional",
                    "type": "string"
                },
                "generation": {
                    "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
                    "type": "integer"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional",
                    "type": "string"
                },
                "labels": {
                    "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "managedFields": {
                    "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.\n\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.ManagedFieldsEntry"
                    }
                },
                "name": {
                    "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
                    "type": "string"
                },
                "ownerReferences": {
                    "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.OwnerReference"
                    }
                },
                "resourceVersion": {
                    "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional",
                    "type": "string"
                },
                "selfLink": {
                    "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n\nDEPRECATED\nKubernetes will stop propagating this field in 1.20 release and the field is planned\nto be removed in 1.21 release.\n+optional",
                    "type": "string"
                },
                "spec": {
                    "$ref": "#/definitions/v1alpha1.LocalStorageNodeSpec"
                },
                "status": {
                    "$ref": "#/definitions/v1alpha1.LocalStorageNodeStatus"
                },
                "uid": {
                    "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional",
                    "type": "string"
                }
            }
        },
        "v1alpha1.LocalStorageNodeCondition": {
            "type": "object",
            "properties": {
                "lastTransitionTime": {
                    "description": "Last time the condition transitioned from one status to another.",
                    "type": "string"
                },
                "lastUpdateTime": {
                    "description": "The last time this condition was updated.",
                    "type": "string"
                },
                "message": {
                    "description": "A human-readable message indicating details about the transition.",
                    "type": "string"
                },
                "reason": {
                    "description": "The reason for the condition's last transition.",
                    "type": "string"
                },
                "status": {
                    "description": "Status of the condition, one of True, False, Unknown.",
                    "type": "string"
                },
                "type": {
                    "description": "Type of localstoragenode condition.",
                    "type": "string"
                }
            }
        },
        "v1alpha1.LocalStorageNodeSpec": {
            "type": "object",
            "properties": {
                "hostname": {
                    "type": "string"
                },
                "storageIP": {
                    "description": "IPv4 address is for HA replication traffic",
                    "type": "string"
                },
                "topogoly": {
                    "$ref": "#/definitions/v1alpha1.Topology"
                }
            }
        },
        "v1alpha1.LocalStorageNodeStatus": {
            "type": "object",
            "properties": {
                "conditions": {
                    "description": "Represents the latest available observations of a localstoragenode's current state.\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1alpha1.LocalStorageNodeCondition"
                    }
                },
                "pools": {
                    "description": "There may have multiple storage pools in a node.\ne.g. HDD_POOL, SSD_POOL, NVMe_POOL\nPools: poolName -\u003e LocalPool",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/v1alpha1.LocalPool"
                    }
                },
                "state": {
                    "description": "State of the Local Storage Node/Member: New, Active, Inactive, Failed",
                    "type": "string"
                }
            }
        },
        "v1alpha1.LocalStorageStatus": {
            "type": "object",
            "properties": {
                "csi": {
                    "$ref": "#/definitions/v1alpha1.DeployStatus"
                },
                "instances": {
                    "$ref": "#/definitions/v1alpha1.DeployStatus"
                }
            }
        },
        "v1alpha1.LocalVolume": {
            "type": "object",
            "properties": {
                "annotations": {
                    "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n+optional",
                    "type": "string"
                },
                "clusterName": {
                    "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\n+optional",
                    "type": "string"
                },
                "creationTimestamp": {
                    "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "deletionGracePeriodSeconds": {
                    "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
                    "type": "integer"
                },
                "deletionTimestamp": {
                    "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "finalizers": {
                    "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generateName": {
                    "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional",
                    "type": "string"
                },
                "generation": {
                    "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
                    "type": "integer"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional",
                    "type": "string"
                },
                "labels": {
                    "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "managedFields": {
                    "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.\n\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.ManagedFieldsEntry"
                    }
                },
                "name": {
                    "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
                    "type": "string"
                },
                "ownerReferences": {
                    "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.OwnerReference"
                    }
                },
                "resourceVersion": {
                    "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional",
                    "type": "string"
                },
                "selfLink": {
                    "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n\nDEPRECATED\nKubernetes will stop propagating this field in 1.20 release and the field is planned\nto be removed in 1.21 release.\n+optional",
                    "type": "string"
                },
                "spec": {
                    "$ref": "#/definitions/v1alpha1.LocalVolumeSpec"
                },
                "status": {
                    "$ref": "#/definitions/v1alpha1.LocalVolumeStatus"
                },
                "uid": {
                    "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional",
                    "type": "string"
                }
            }
        },
        "v1alpha1.LocalVolumeConvertSpec": {
            "type": "object",
            "properties": {
                "abort": {
                    "description": "+kubebuilder:default:=false",
                    "type": "boolean"
                },
                "replicaNumber": {
                    "description": "ReplicaNumber is the number of replicas which the volume will be converted to\ncurrently, only support the case of converting a non-HA volume to HA\n+kubebuilder:validation:Minimum:=2\n+kubebuilder:validation:Maximum:=2",
                    "type": "integer"
                },
                "volumeName": {
                    "type": "string"
                }
            }
        },
        "v1alpha1.LocalVolumeConvertStatus": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "state": {
                    "description": "Consistent, Inconsistent, replica is ready only when consistent",
                    "type": "string"
                }
            }
        },
        "v1alpha1.LocalVolumeExpandSpec": {
            "type": "object",
            "properties": {
                "abort": {
                    "description": "+kubebuilder:default:=false",
                    "type": "boolean"
                },
                "requiredCapacityBytes": {
                    "description": "+kubebuilder:validation:Minimum:=4194304",
                    "type": "integer"
                },
                "volumeName": {
                    "type": "string"
                }
            }
        },
        "v1alpha1.LocalVolumeExpandStatus": {
            "type": "object",
            "properties": {
                "allocatedCapacityBytes": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "state": {
                    "description": "Consistent, Inconsistent, replica is ready only when consistent",
                    "type": "string"
                },
                "subs": {
                    "description": "sub resources at different node.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "v1alpha1.LocalVolumeGroupSpec": {
            "type": "object",
            "properties": {
                "accessibility": {
                    "description": "Accessibility is the topology requirement of the volume. It describes how to locate and distribute the volume replicas",
                    "$ref": "#/definitions/v1alpha1.AccessibilityTopology"
                },
                "namespace": {
                    "type": "string"
                },
                "pods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "volumes": {
                    "description": "Volumes is the collection of the volumes in the group",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1alpha1.VolumeInfo"
                    }
                }
            }
        },
        "v1alpha1.LocalVolumeGroupStatus": {
            "type": "object"
        },
        "v1alpha1.LocalVolumeMigrateSpec": {
            "type": "object",
            "properties": {
                "abort": {
                    "description": "+kubebuilder:default:=false",
                    "type": "boolean"
                },
                "migrateAllVols": {
                    "description": "+kubebuilder:default:=false",
                    "type": "boolean"
                },
                "sourceNode": {
                    "description": "source NodeNames",
                    "type": "string"
                },
                "targetNodesSuggested": {
                    "description": "suggested target NodeNames",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "volumeName": {
                    "type": "string"
                }
            }
        },
        "v1alpha1.LocalVolumeMigrateStatus": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "error message to describe some states",
                    "type": "string"
                },
                "originalReplicaNumber": {
                    "description": "record the volume's replica number, it will be set internally",
                    "type": "integer"
                },
                "state": {
                    "description": "State of the operation, e.g. submitted, started, completed, abort, ...",
                    "type": "string"
                },
                "targetNode": {
                    "description": "record the node where the specified replica is migrated to",
                    "type": "string"
                }
            }
        },
        "v1alpha1.LocalVolumeReplicaSpec": {
            "type": "object",
            "properties": {
                "delete": {
                    "description": "Delete is to indicate where the replica should be deleted or not.\nIt's different from the regular resource delete interface in Kubernetes.\nThe purpose is to protect it from any mistakes\n+kubebuilder:default:=false",
                    "type": "boolean"
                },
                "nodeName": {
                    "description": "NodeName is the assigned node where the volume replica is located",
                    "type": "string"
                },
                "poolName": {
                    "description": "PoolName is the name of the storage pool, e.g. LocalStorage_PoolHDD, LocalStorage_PoolSSD, etc..",
                    "type": "string"
                },
                "requiredCapacityBytes": {
                    "description": "+kubebuilder:validation:Minimum:=4194304",
                    "type": "integer"
                },
                "volumeName": {
                    "description": "VolumeName is the name of the volume, e.g. pvc-fbf3ffc3-66db-4dae-9032-bda3c61b8f85",
                    "type": "string"
                }
            }
        },
        "v1alpha1.LocalVolumeReplicaStatus": {
            "type": "object",
            "properties": {
                "allocatedCapacityBytes": {
                    "description": "AllocatedCapacityBytes is the real allocated capacity in bytes",
                    "type": "integer"
                },
                "devPath": {
                    "description": "DevicePath is a link path of the StoragePath of the volume replica,\ne.g. /dev/LocalStorage_PoolHDD/pvc-fbf3ffc3-66db-4dae-9032-bda3c61b8f85",
                    "type": "string"
                },
                "disks": {
                    "description": "Disks is a list of physical disks where the volume replica is spread cross, especially for striped LVM volume replica",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "haState": {
                    "description": "HAState is state for ha replica, replica.Status.State == Ready only when HAState is Consistent of nil",
                    "$ref": "#/definitions/v1alpha1.HAState"
                },
                "inuse": {
                    "description": "InUse is one of volume replica's states, which indicates the replica is used by a Pod or not\n+kubebuilder:default:=false",
                    "type": "boolean"
                },
                "state": {
                    "description": "State is the phase of volume replica, e.g. Creating, Ready, NotReady, ToBeDeleted, Deleted",
                    "type": "string"
                },
                "storagePath": {
                    "description": "StoragePath is a real path of the volume replica, like /dev/sdg.",
                    "type": "string"
                },
                "synced": {
                    "description": "Synced is the sync state of the volume replica, which is important in HA volume\n+kubebuilder:default:=false",
                    "type": "boolean"
                }
            }
        },
        "v1alpha1.LocalVolumeSpec": {
            "type": "object",
            "properties": {
                "accessibility": {
                    "description": "Accessibility is the topology requirement of the volume. It describes how to locate and distribute the volume replicas",
                    "$ref": "#/definitions/v1alpha1.AccessibilityTopology"
                },
                "config": {
                    "description": "Config is the configration for the volume replicas\nIt will be managed by the controller, and watched by all the nodes\nImportant: node will manage volume replica according this config",
                    "$ref": "#/definitions/v1alpha1.VolumeConfig"
                },
                "convertible": {
                    "description": "Convertible is to indicate if the non-HA volume can be transitted to HA volume or not\n+kubebuilder:default:=false",
                    "type": "boolean"
                },
                "delete": {
                    "description": "Delete is to indicate where the replica should be deleted or not.\nIt's different from the regular resource delete interface in Kubernetes.\nThe purpose is to protect it from any mistakes\n+kubebuilder:default:=false",
                    "type": "boolean"
                },
                "poolName": {
                    "description": "PoolName is the name of the storage pool, e.g. LocalStorage_PoolHDD, LocalStorage_PoolSSD, etc..",
                    "type": "string"
                },
                "pvcName": {
                    "description": "PersistentVolumeClaimName is the name of the associated PVC",
                    "type": "string"
                },
                "pvcNamespace": {
                    "description": "PersistentVolumeClaimNamespace is the namespace of the associated PVC",
                    "type": "string"
                },
                "replicaNumber": {
                    "description": "replica number: 1 - non-HA, 2 - HA, 4 - migration (temp)\n+kubebuilder:validation:Minimum:=1\n+kubebuilder:validation:Maximum:=4",
                    "type": "integer"
                },
                "requiredCapacityBytes": {
                    "description": "+kubebuilder:validation:Minimum:=4194304",
                    "type": "integer"
                },
                "volumegroup": {
                    "description": "VolumeGroup is the group name of the local volumes. It is designed for the scheduling and allocating.",
                    "type": "string"
                }
            }
        },
        "v1alpha1.LocalVolumeStatus": {
            "type": "object",
            "properties": {
                "allocatedCapacityBytes": {
                    "description": "AllocatedCapacityBytes is the real allocated capacity in bytes of the volume replicas.\nIn case of HA volume with multiple replicas, the value is equal to the one of a replica's size",
                    "type": "integer"
                },
                "fsType": {
                    "description": "PublishedFSType is the fstype on this volume",
                    "type": "string"
                },
                "publishedNode": {
                    "description": "PublishedNodeName is the node where the volume is published and used by pod",
                    "type": "string"
                },
                "rawblock": {
                    "description": "PublishedRawBlock is for raw block\n+kubebuilder:default:=false",
                    "type": "boolean"
                },
                "replicas": {
                    "description": "Volume is a logical concept and composed by one or many replicas which will be located at different node.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "state": {
                    "description": "State is the phase of volume replica, e.g. Creating, Ready, NotReady, ToBeDeleted, Deleted",
                    "type": "string"
                },
                "usedCapacityBytes": {
                    "description": "UsedCapacityBytes is the used capacity in bytes of the volume, which is avaiable only for filesystem",
                    "type": "integer"
                }
            }
        },
        "v1alpha1.PartitionInfo": {
            "type": "object",
            "properties": {
                "filesystem": {
                    "description": "FileSystem contains mount point and filesystem type\n+optional",
                    "$ref": "#/definitions/v1alpha1.FileSystemInfo"
                },
                "hasFileSystem": {
                    "description": "HasFileSystem represents whether the filesystem is included",
                    "type": "boolean"
                },
                "path": {
                    "description": "Path represents the partition path in the OS",
                    "type": "string"
                }
            }
        },
        "v1alpha1.PodStatus": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "node": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "v1alpha1.RAIDInfo": {
            "type": "object",
            "properties": {
                "raidMaster": {
                    "description": "RAIDMaster is the master of the RAID disk, it works for only RAID slave disk, e.g. /dev/bus/0",
                    "type": "string"
                }
            }
        },
        "v1alpha1.SchedulerStatus": {
            "type": "object",
            "properties": {
                "instances": {
                    "$ref": "#/definitions/v1alpha1.DeployStatus"
                }
            }
        },
        "v1alpha1.SmartInfo": {
            "type": "object",
            "properties": {
                "overallHealth": {
                    "description": "OverallHealth identifies if the disk is healthy or not",
                    "type": "string"
                }
            }
        },
        "v1alpha1.Topology": {
            "type": "object",
            "properties": {
                "region": {
                    "description": "Region is a collection of Zones\n+kubebuilder:default:=default",
                    "type": "string"
                },
                "zone": {
                    "description": "Zone is a collection of Local Storage Nodes\n+kubebuilder:default:=default",
                    "type": "string"
                }
            }
        },
        "v1alpha1.VolumeConfig": {
            "type": "object",
            "properties": {
                "convertible": {
                    "description": "Convertible is to indicate if the non-HA volume can be transitted to HA volume or not",
                    "type": "boolean"
                },
                "initialized": {
                    "type": "boolean"
                },
                "readyToInitialize": {
                    "type": "boolean"
                },
                "replicas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1alpha1.VolumeReplica"
                    }
                },
                "requiredCapacityBytes": {
                    "type": "integer"
                },
                "resourceID": {
                    "description": "ResourceID is for HA volume, set to '-1' for non-HA volume",
                    "type": "integer"
                },
                "version": {
                    "description": "Version of config, start from 0, plus 1 every time config update",
                    "type": "integer"
                },
                "volumeName": {
                    "type": "string"
                }
            }
        },
        "v1alpha1.VolumeInfo": {
            "type": "object",
            "properties": {
                "localvolume": {
                    "description": "LocalVolumeName is the name of the LocalVolume",
                    "type": "string"
                },
                "pvc": {
                    "description": "PersistentVolumeClaimName is the name of the associated PVC",
                    "type": "string"
                }
            }
        },
        "v1alpha1.VolumeReplica": {
            "type": "object",
            "properties": {
                "hostname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "ip": {
                    "type": "string"
                },
                "primary": {
                    "type": "boolean"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
